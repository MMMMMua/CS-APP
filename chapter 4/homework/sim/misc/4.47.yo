                            | # *data in %rdi, count in %rsi
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp
0x00a: 804000000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
0x018:                      | 	.align 8
0x018:                      | array:
0x018: 0500000000000000     | 	.quad 0x0000000000000005
0x020: 0300000000000000     | 	.quad 0x0000000000000003
0x028: 0200000000000000     | 	.quad 0x0000000000000002
0x030: 0100000000000000     | 	.quad 0x0000000000000001
0x038: 0400000000000000     | 	.quad 0x0000000000000004
                            | 	
0x040:                      | main:
0x040: 30f71800000000000000 | 	irmovq array, %rdi
0x04a: 30f60500000000000000 | 	irmovq $5, %rsi
0x054: 805e00000000000000   | 	call bubble
0x05d: 90                   | 	ret
                            | 	
0x05e:                      | bubble:	
                            | 	# i in %rax, last in %rbx	
0x05e: 2063                 | 	rrmovq %rsi, %rbx
0x060: 30f80000000000000000 | 	irmovq $0, %r8
0x06a: 30f90100000000000000 | 	irmovq $1, %r9
0x074: 30fa0800000000000000 | 	irmovq $8, %r10
0x07e: 6193                 | 	subq %r9, %rbx
0x080: 70df00000000000000   | 	jmp testlast
                            | 
0x089:                      | looplast:	
0x089: 2080                 | 	rrmovq %r8, %rax #set i to 0
0x08b: 2071                 | 	rrmovq %rdi, %rcx #rcx is data[i]
0x08d: 70d000000000000000   | 	jmp testi
                            | 
0x096:                      | loopi:
0x096: 208e                 | 	rrmovq %r8, %r14	
0x098: 50b10000000000000000 | 	mrmovq (%rcx), %r11 #data[i]
0x0a2: 50c10800000000000000 | 	mrmovq 0x8(%rcx), %r12 #data[i+1]
0x0ac: 20bd                 | 	rrmovq %r11, %r13
0x0ae: 61cd                 | 	subq %r12, %r13 #data[i] - data[i+1]
0x0b0: 26de                 | 	cmovg %r13, %r14
0x0b2: 60cb                 | 	addq %r12, %r11
0x0b4: 60ec                 | 	addq %r14, %r12
0x0b6: 61cb                 | 	subq %r12, %r11
0x0b8: 40b10000000000000000 | 	rmmovq %r11, (%rcx)
0x0c2: 40c10800000000000000 | 	rmmovq %r12, 0x8(%rcx)
0x0cc: 6090                 | 	addq %r9, %rax #inc i by 1 
0x0ce: 60a1                 | 	addq %r10, %rcx # rdi points to data[i+1]
                            | 	
0x0d0:                      | testi:
0x0d0: 2002                 | 	rrmovq %rax, %rdx #make a copy of i
0x0d2: 6132                 | 	subq %rbx, %rdx #i - last
0x0d4: 729600000000000000   | 	jl loopi
0x0dd: 6193                 | 	subq %r9, %rbx #dec last by 1
                            | 	
0x0df:                      | testlast:
0x0df: 6183                 | 	subq %r8, %rbx
0x0e1: 768900000000000000   | 	jg looplast
0x0ea: 90                   | 	ret
                            | 
                            | #stack starts here and grows to lower addresses.
0x200:                      | 	.pos 0x200
0x200:                      | stack:	
